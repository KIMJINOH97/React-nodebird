{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\react-nodebird\\\\ch1\\\\front\\\\pages\\\\_app.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport AppLayout from '../components/AppLayout';\nimport PropTypes from 'prop-types'; // 모든 파일들이 부모 component로 사용한다.\n\nvar Nodebird = function Nodebird(_ref) {\n  var Component = _ref.Component;\n  // props로 Component를 받는다.\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, \"Node bird\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.css\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }\n  }), __jsx(\"script\", {\n    src: \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.js\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  })), __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, __jsx(Component, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  })));\n}; // 부모로부터 올바른 자료형을 받았는지 확인\n\n\n_c = Nodebird;\nNodebird.propTypes = {\n  Component: PropTypes.element // 노드로 가능한 것 : 랜더링으로 할 수 있는 모든 것 tag 쓰는 애들 >> element\n\n};\nexport default Nodebird;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nodebird\");","map":{"version":3,"sources":["C:/react-nodebird/ch1/front/pages/_app.js"],"names":["React","Head","AppLayout","PropTypes","Nodebird","Component","propTypes","element"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAmB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AAChC;AACA,SACI,4BACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAM,IAAA,GAAG,EAAC,YAAV;AAAuB,IAAA,IAAI,EAAC,6DAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAQ,IAAA,GAAG,EAAC,4DAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,EAMI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CANJ,CADJ;AAYH,CAdD,C,CAeA;;;KAfMD,Q;AAgBNA,QAAQ,CAACE,SAAT,GAAqB;AACjBD,EAAAA,SAAS,EAAEF,SAAS,CAACI,OADJ,CACa;;AADb,CAArB;AAGA,eAAeH,QAAf","sourcesContent":["import React from 'react';\r\nimport Head from 'next/head';\r\nimport AppLayout from '../components/AppLayout';\r\nimport PropTypes from 'prop-types';\r\n// 모든 파일들이 부모 component로 사용한다.\r\n\r\nconst Nodebird = ({ Component }) => {\r\n    // props로 Component를 받는다.\r\n    return (\r\n        <>\r\n            <Head>\r\n                <title>Node bird</title>\r\n                <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.css\" />\r\n                <script src=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.js\" />\r\n            </Head>\r\n            <AppLayout>\r\n                <Component />\r\n            </AppLayout>\r\n        </>\r\n    );\r\n};\r\n// 부모로부터 올바른 자료형을 받았는지 확인\r\nNodebird.propTypes = {\r\n    Component: PropTypes.element, // 노드로 가능한 것 : 랜더링으로 할 수 있는 모든 것 tag 쓰는 애들 >> element\r\n};\r\nexport default Nodebird;\r\n"]},"metadata":{},"sourceType":"module"}