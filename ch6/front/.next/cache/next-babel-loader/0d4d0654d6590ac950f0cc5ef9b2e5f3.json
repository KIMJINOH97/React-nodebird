{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-nodebird\\\\ch1\\\\front\\\\pages\\\\signup.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, memo } from 'react'; // useCallback으로 evnetlistener들을 감싸준다\n\nimport { Button, Form, Input, Checkbox } from 'antd';\nimport PropTypes from 'prop-types';\nimport { signUpAction } from '../reducers/user';\nimport { useDispatch } from 'react-redux';\nexport const useInput = (initValue = null) => {\n  // 커스텀 훅!\n  const {\n    0: value,\n    1: setter\n  } = useState(initValue);\n  const handler = useCallback(e => {\n    setter(e.target.value);\n  });\n  return [value, handler];\n};\nconst TextInput = memo(({\n  value,\n  onChange\n}) => {\n  return __jsx(Input, {\n    name: \"user-id\",\n    value: value,\n    required: true,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }\n  });\n}); // 지나친 최적화긴 함.\n\nconst TexInput = memo(({\n  value,\n  onChange\n}) => {\n  // proptypes 확인 차\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }\n  }, value);\n}); // 프로토 타입 확인 차\n\nTexInput.propTypes = {\n  value: PropTypes.string\n};\n\nconst Signup = () => {\n  // 훅스 사용 실무 input은 항상 value랑 onchange가 짝을 이뤄야한다.\n  const {\n    0: id,\n    1: setId\n  } = useState('');\n  const {\n    0: nick,\n    1: setNick\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: passwordCheck,\n    1: setPasswordCheck\n  } = useState('');\n  const {\n    0: term,\n    1: setTerm\n  } = useState(false);\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(false);\n  const {\n    0: termError,\n    1: setTermError\n  } = useState(false);\n  const dispatch = useDispatch();\n  const onSubmit = useCallback(e => {\n    console.log('Submit!!!');\n    e.preventDefault;\n\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      alert('약관에 동의 하셔야 합니다');\n      return setTermError(true);\n    }\n\n    dispatch(signUpAction);\n  }, [password, passwordCheck, term]); // useCallback을 쓰면 dependancy들도 넣어 줘야한다. 어떤 것들이 쓰이는 지\n  // antd component안에 들어가는 함수들은 useCallback으로 감싸줘야한다.\n  // why? 의도치 않은 rerendering이 되기 때문에 >> props로 넘겨주는 함수는 usecallback으로 감싸준다. 통째로 다 재 실행 되기 때문에 막기 위해\n  // 함수도 객체기 때문에 새로 생성한 함수는 이전 객체와 다른 객체가 되기 때문에 의도치 않은 리렌더링이 된다.\n\n  const onChangeId = useCallback(e => {\n    setId(e.target.value);\n  });\n  const onChangeNick = useCallback(e => {\n    setNick(e.target.value);\n  });\n  const onChangePassword = useCallback(e => {\n    setPassword(e.target.value);\n  });\n  const onChangePasswordCheck = useCallback(e => {\n    setPasswordError(e.target.value !== password);\n    setPasswordCheck(e.target.value);\n  }, [password]);\n  const onChangeTerm = useCallback(e => {\n    setTermError(false);\n    setTerm(e.target.checked);\n  }); //const [id, onChangeId] = useInput('');\n\n  return (// onSubmit > onFinish로 변경됨 antd 문법\n    __jsx(React.Fragment, null, __jsx(Form, {\n      onFinish: onSubmit,\n      style: {\n        padding: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"user-id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }), __jsx(TextInput, {\n      name: \"user-id\",\n      value: id,\n      onChange: onChangeId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    })), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"user-nick\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, \"\\uB2C9\\uB124\\uC784\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }), __jsx(Input, {\n      name: \"user-nick\",\n      value: nick,\n      required: true,\n      onChange: onChangeNick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    })), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"user-password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }), __jsx(Input, {\n      name: \"user-password\",\n      type: \"password\",\n      value: password,\n      required: true,\n      onChange: onChangePassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    })), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"user-password-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }), __jsx(Input, {\n      name: \"user-password-check\",\n      type: \"password\",\n      value: passwordCheck,\n      required: true,\n      onChange: onChangePasswordCheck,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }), passwordError && __jsx(\"div\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 39\n      }\n    }, \" \\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4. \")), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, __jsx(Checkbox, {\n      name: \"user-term\",\n      checked: term,\n      onChange: onChangeTerm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, \"\\uB9D0\\uC744 \\uC798 \\uB4E3\\uC790 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"), termError && __jsx(\"div\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 35\n      }\n    }, \" \\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\")), __jsx(\"div\", {\n      style: {\n        marginTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, __jsx(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, \"\\uAC00\\uC785\\uD558\\uAE30\"))))\n  ); //파란색 버튼은 type = primary  html 쓰고 싶으면 htmlType=\"submit\" 써야함 >> button type = \"submit\"\n};\n\nexport default Signup;","map":{"version":3,"sources":["C:/react-nodebird/ch1/front/pages/signup.js"],"names":["React","useState","useCallback","memo","Button","Form","Input","Checkbox","PropTypes","signUpAction","useDispatch","useInput","initValue","value","setter","handler","e","target","TextInput","onChange","TexInput","propTypes","string","Signup","id","setId","nick","setNick","password","setPassword","passwordCheck","setPasswordCheck","term","setTerm","passwordError","setPasswordError","termError","setTermError","dispatch","onSubmit","console","log","preventDefault","alert","onChangeId","onChangeNick","onChangePassword","onChangePasswordCheck","onChangeTerm","checked","padding","color","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, memo } from 'react'; // useCallback으로 evnetlistener들을 감싸준다\r\nimport { Button, Form, Input, Checkbox } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { signUpAction } from '../reducers/user';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const useInput = (initValue = null) => {\r\n    // 커스텀 훅!\r\n    const [value, setter] = useState(initValue);\r\n    const handler = useCallback((e) => {\r\n        setter(e.target.value);\r\n    });\r\n    return [value, handler];\r\n};\r\n\r\nconst TextInput = memo(({ value, onChange }) => {\r\n    return <Input name=\"user-id\" value={value} required onChange={onChange} />;\r\n}); // 지나친 최적화긴 함.\r\n\r\nconst TexInput = memo(({ value, onChange }) => {\r\n    // proptypes 확인 차\r\n    return <div>{value}</div>;\r\n}); // 프로토 타입 확인 차\r\n\r\nTexInput.propTypes = {\r\n    value: PropTypes.string,\r\n};\r\n\r\nconst Signup = () => {\r\n    // 훅스 사용 실무 input은 항상 value랑 onchange가 짝을 이뤄야한다.\r\n    const [id, setId] = useState('');\r\n    const [nick, setNick] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passwordCheck, setPasswordCheck] = useState('');\r\n    const [term, setTerm] = useState(false);\r\n    const [passwordError, setPasswordError] = useState(false);\r\n    const [termError, setTermError] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const onSubmit = useCallback(\r\n        (e) => {\r\n            console.log('Submit!!!');\r\n            e.preventDefault;\r\n            if (password !== passwordCheck) {\r\n                return setPasswordError(true);\r\n            }\r\n            if (!term) {\r\n                alert('약관에 동의 하셔야 합니다');\r\n                return setTermError(true);\r\n            }\r\n            dispatch(signUpAction);\r\n        },\r\n        [password, passwordCheck, term]\r\n    ); // useCallback을 쓰면 dependancy들도 넣어 줘야한다. 어떤 것들이 쓰이는 지\r\n\r\n    // antd component안에 들어가는 함수들은 useCallback으로 감싸줘야한다.\r\n    // why? 의도치 않은 rerendering이 되기 때문에 >> props로 넘겨주는 함수는 usecallback으로 감싸준다. 통째로 다 재 실행 되기 때문에 막기 위해\r\n    // 함수도 객체기 때문에 새로 생성한 함수는 이전 객체와 다른 객체가 되기 때문에 의도치 않은 리렌더링이 된다.\r\n    const onChangeId = useCallback((e) => {\r\n        setId(e.target.value);\r\n    });\r\n\r\n    const onChangeNick = useCallback((e) => {\r\n        setNick(e.target.value);\r\n    });\r\n\r\n    const onChangePassword = useCallback((e) => {\r\n        setPassword(e.target.value);\r\n    });\r\n\r\n    const onChangePasswordCheck = useCallback(\r\n        (e) => {\r\n            setPasswordError(e.target.value !== password);\r\n            setPasswordCheck(e.target.value);\r\n        },\r\n        [password]\r\n    );\r\n    const onChangeTerm = useCallback((e) => {\r\n        setTermError(false);\r\n        setTerm(e.target.checked);\r\n    });\r\n\r\n    //const [id, onChangeId] = useInput('');\r\n\r\n    return (\r\n        // onSubmit > onFinish로 변경됨 antd 문법\r\n        <>\r\n            <Form onFinish={onSubmit} style={{ padding: 10 }}>\r\n                <div>\r\n                    <label htmlFor=\"user-id\">아이디</label>\r\n                    <br />\r\n                    <TextInput name=\"user-id\" value={id} onChange={onChangeId} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-nick\">닉네임</label>\r\n                    <br />\r\n                    <Input name=\"user-nick\" value={nick} required onChange={onChangeNick} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-password\">비밀번호</label>\r\n                    <br />\r\n                    <Input name=\"user-password\" type=\"password\" value={password} required onChange={onChangePassword} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-password-check\">비밀번호 확인</label>\r\n                    <br />\r\n                    <Input name=\"user-password-check\" type=\"password\" value={passwordCheck} required onChange={onChangePasswordCheck} />\r\n                    {passwordError && <div style={{ color: 'red' }}> 비밀번호가 일치하지 않습니다. </div>}\r\n                </div>\r\n                <div>\r\n                    <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>\r\n                        말을 잘 듣자 동의합니다.\r\n                    </Checkbox>\r\n                    {termError && <div style={{ color: 'red' }}> 약관에 동의하셔야 합니다.</div>}\r\n                </div>\r\n                <div style={{ marginTop: 10 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        가입하기\r\n                    </Button>\r\n                </div>\r\n            </Form>\r\n        </>\r\n    ); //파란색 버튼은 type = primary  html 쓰고 싶으면 htmlType=\"submit\" 써야함 >> button type = \"submit\"\r\n};\r\n\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}