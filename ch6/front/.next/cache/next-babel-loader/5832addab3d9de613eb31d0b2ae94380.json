{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\react-nodebird\\\\ch1\\\\front\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react'; // next에선 원래 안써도 됨\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostCard from '../components/PostCard';\nimport PostForm from '../components/PostForm';\nimport { LOG_IN, LOG_OUT, loginAction, logoutAction } from '../reducers/user';\nvar dummy = {\n  isLoggedIn: true,\n  imagePaths: [],\n  mainPosts: [{\n    User: {\n      id: 1,\n      nickname: '제로초'\n    },\n    content: '첫 번째 게시글',\n    img: ''\n  }]\n};\n\nvar Home = function Home() {\n  _s();\n\n  // hooks\n  var dispatch = useDispatch();\n  var user = useSelector(function (state) {\n    return state.user;\n  }); // 첫 state는 전체 state 안에는 user와 isloggedin이 들어있음\n\n  console.log(user);\n  useEffect(function () {\n    // 로그인 로그아웃 그냥 테스트용\n    dispatch({\n      type: LOG_IN,\n      data: {\n        nickname: '제로초'\n      }\n    });\n    dispatch({\n      type: LOG_OUT\n    });\n    dispatch(loginAction);\n    dispatch(logoutAction);\n  }, []);\n  return (// user도 훅스로 가져올 수 있음\n    __jsx(React.Fragment, null, __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, user ? __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, \"\\uB85C\\uADF8\\uC778 \\uD588\\uC2B5\\uB2C8\\uB2E4 : \", user.nickname) : __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 65\n      }\n    }, \"\\uB85C\\uADF8\\uC544\\uC6C3 \\uD588\\uC2B5\\uB2C8\\uB2E4.\"), dummy.isLoggedIn && __jsx(PostForm, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 38\n      }\n    }), dummy.mainPosts.map(function (c) {\n      return __jsx(PostCard, {\n        key: c,\n        post: c,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 28\n        }\n      });\n    })))\n  );\n};\n\n_s(Home, \"D+tpgEc7oJbenxkkKtcwSrPV108=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/react-nodebird/ch1/front/pages/index.js"],"names":["React","useEffect","useDispatch","useSelector","PostCard","PostForm","LOG_IN","LOG_OUT","loginAction","logoutAction","dummy","isLoggedIn","imagePaths","mainPosts","User","id","nickname","content","img","Home","dispatch","user","state","console","log","type","data","map","c"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAA0C;;AAC1C,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,WAA1B,EAAuCC,YAAvC,QAA2D,kBAA3D;AAEA,IAAMC,KAAK,GAAG;AACVC,EAAAA,UAAU,EAAE,IADF;AAEVC,EAAAA,UAAU,EAAE,EAFF;AAGVC,EAAAA,SAAS,EAAE,CACP;AACIC,IAAAA,IAAI,EAAE;AACFC,MAAAA,EAAE,EAAE,CADF;AAEFC,MAAAA,QAAQ,EAAE;AAFR,KADV;AAKIC,IAAAA,OAAO,EAAE,UALb;AAMIC,IAAAA,GAAG,EAAE;AANT,GADO;AAHD,CAAd;;AAeA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACf;AACA,MAAMC,QAAQ,GAAGlB,WAAW,EAA5B;AACA,MAAMmB,IAAI,GAAGlB,WAAW,CAAC,UAACmB,KAAD;AAAA,WAAWA,KAAK,CAACD,IAAjB;AAAA,GAAD,CAAxB,CAHe,CAGkC;;AACjDE,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACApB,EAAAA,SAAS,CAAC,YAAM;AACZ;AACAmB,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEnB,MADD;AAELoB,MAAAA,IAAI,EAAE;AACFV,QAAAA,QAAQ,EAAE;AADR;AAFD,KAAD,CAAR;AAMAI,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAElB;AADD,KAAD,CAAR;AAGAa,IAAAA,QAAQ,CAACZ,WAAD,CAAR;AACAY,IAAAA,QAAQ,CAACX,YAAD,CAAR;AACH,GAbQ,EAaN,EAbM,CAAT;AAeA,SACI;AACA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKY,IAAI,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAAiBA,IAAI,CAACL,QAAtB,CAAH,GAA2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DADpD,EAEKN,KAAK,CAACC,UAAN,IAAoB,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFzB,EAGKD,KAAK,CAACG,SAAN,CAAgBc,GAAhB,CAAoB,UAACC,CAAD,EAAO;AACxB,aAAO,MAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,CAAf;AAAkB,QAAA,IAAI,EAAEA,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFA,CAHL,CADJ;AAFJ;AAYH,CAhCD;;GAAMT,I;UAEejB,W,EACJC,W;;;KAHXgB,I;AAkCN,eAAeA,IAAf","sourcesContent":["import React, { useEffect } from 'react'; // next에선 원래 안써도 됨\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PostCard from '../components/PostCard';\r\nimport PostForm from '../components/PostForm';\r\nimport { LOG_IN, LOG_OUT, loginAction, logoutAction } from '../reducers/user';\r\n\r\nconst dummy = {\r\n    isLoggedIn: true,\r\n    imagePaths: [],\r\n    mainPosts: [\r\n        {\r\n            User: {\r\n                id: 1,\r\n                nickname: '제로초',\r\n            },\r\n            content: '첫 번째 게시글',\r\n            img: '',\r\n        },\r\n    ],\r\n};\r\n\r\nconst Home = () => {\r\n    // hooks\r\n    const dispatch = useDispatch();\r\n    const user = useSelector((state) => state.user); // 첫 state는 전체 state 안에는 user와 isloggedin이 들어있음\r\n    console.log(user);\r\n    useEffect(() => {\r\n        // 로그인 로그아웃 그냥 테스트용\r\n        dispatch({\r\n            type: LOG_IN,\r\n            data: {\r\n                nickname: '제로초',\r\n            },\r\n        });\r\n        dispatch({\r\n            type: LOG_OUT,\r\n        });\r\n        dispatch(loginAction);\r\n        dispatch(logoutAction);\r\n    }, []);\r\n\r\n    return (\r\n        // user도 훅스로 가져올 수 있음\r\n        <>\r\n            <div>\r\n                {user ? <div>로그인 했습니다 : {user.nickname}</div> : <div>로그아웃 했습니다.</div>}\r\n                {dummy.isLoggedIn && <PostForm />}\r\n                {dummy.mainPosts.map((c) => {\r\n                    return <PostCard key={c} post={c} />;\r\n                })}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}