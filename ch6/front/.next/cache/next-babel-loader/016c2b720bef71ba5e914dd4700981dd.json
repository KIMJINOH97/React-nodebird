{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\react-nodebird\\\\ch1\\\\front\\\\pages\\\\index.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react'; // next에선 원래 안써도 됨\n\nimport { Input, Form, Button, Card, Avatar } from 'antd';\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nvar dummy = {\n  isLoggedIn: true,\n  imagePaths: [],\n  mainPosts: [{\n    User: {\n      id: 1,\n      nickname: '제로초',\n      content: '첫 번째 게시글'\n    }\n  }]\n};\n\nvar Home = function Home() {\n  // hooks 문법\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, dummy.isLoggedIn && // 이미지 업로드 해야하기 때문에 encType은 multipart임\n  // style넣을 때는 객체 형식으로 {{ 넣어야함 }}\n  __jsx(Form, {\n    encType: \"multipart/form-data\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, __jsx(Input.TextArea, {\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC787\\uC5C8\\uB098\\uC694\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 29\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      \"float\": 'right'\n    },\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 29\n    }\n  }, \"\\uC9F9\\uC9F9\\uCA31\")), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }, dummy.imagePaths.map(function (v, i) {\n    // 반복문\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        display: 'inline-block'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 37\n      }\n    }, __jsx(\"img\", {\n      src: 'http://localhost:3000/' + v,\n      style: {\n        width: '200px'\n      },\n      alt: v,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 41\n      }\n    }), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 41\n      }\n    }, __jsx(Button, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 45\n      }\n    }, \"\\uC81C\\uAC70\")));\n  }))), dummy.mainPosts.map(function (c) {\n    return __jsx(Card, {\n      key: +c.createdAt,\n      cover: c.img && __jsx(\"img\", {\n        alt: \"example\",\n        src: c.img,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 45\n        }\n      }),\n      actions: [__jsx(RetweetOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 33\n        }\n      }), __jsx(HeartTwoTone, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 33\n        }\n      }), __jsx(MessageOutlined, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 33\n        }\n      }), __jsx(Popover, {\n        key: \"ellipsis\",\n        content: __jsx(Button.Group, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 41\n          }\n        }, __jsx(Button, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 45\n          }\n        }, \"\\uC2E0\\uACE0\"), __jsx(Button, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 45\n          }\n        }, \"\\uC218\\uC815\"), __jsx(Button, {\n          danger: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 45\n          }\n        }, \"\\uC0AD\\uC81C\")),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 33\n        }\n      })],\n      extra: __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 36\n        }\n      }, \"\\uD314\\uB85C\\uC6B0\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }, __jsx(Card.Meta, {\n      avatar: __jsx(Avatar, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 41\n        }\n      }, c.User.nickname[0]),\n      title: c.User.nickname,\n      description: c.content,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }));\n  })));\n};\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/react-nodebird/ch1/front/pages/index.js"],"names":["React","Input","Form","Button","Card","Avatar","RetweetOutlined","HeartTwoTone","HeartOutlined","MessageOutlined","EllipsisOutlined","dummy","isLoggedIn","imagePaths","mainPosts","User","id","nickname","content","Home","map","v","i","display","width","c","createdAt","img"],"mappings":"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","sourcesContent":["import React from 'react'; // next에선 원래 안써도 됨\r\nimport { Input, Form, Button, Card, Avatar } from 'antd';\r\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\r\n\r\nconst dummy = {\r\n    isLoggedIn: true,\r\n    imagePaths: [],\r\n    mainPosts: [\r\n        {\r\n            User: {\r\n                id: 1,\r\n                nickname: '제로초',\r\n                content: '첫 번째 게시글',\r\n            },\r\n        },\r\n    ],\r\n};\r\n\r\nconst Home = () => {\r\n    // hooks 문법\r\n    return (\r\n        <>\r\n            <div>\r\n                {dummy.isLoggedIn && ( // 이미지 업로드 해야하기 때문에 encType은 multipart임\r\n                    // style넣을 때는 객체 형식으로 {{ 넣어야함 }}\r\n                    <Form encType=\"multipart/form-data\">\r\n                        <Input.TextArea maxLength={140} placeholder=\"어떤 신기한 일이 잇었나요\" />\r\n                        <div>\r\n                            <Button>이미지 업로드</Button>\r\n                            <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\">\r\n                                짹짹쨱\r\n                            </Button>\r\n                        </div>\r\n                        <div>\r\n                            {dummy.imagePaths.map((v, i) => {\r\n                                // 반복문\r\n                                return (\r\n                                    <div key={v} style={{ display: 'inline-block' }}>\r\n                                        <img src={'http://localhost:3000/' + v} style={{ width: '200px' }} alt={v} />\r\n                                        <div>\r\n                                            <Button>제거</Button>\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n                {dummy.mainPosts.map((c) => {\r\n                    return (\r\n                        <Card\r\n                            key={+c.createdAt}\r\n                            cover={c.img && <img alt=\"example\" src={c.img} />}\r\n                            actions={[\r\n                                <RetweetOutlined />,\r\n                                <HeartTwoTone />,\r\n                                <MessageOutlined />,\r\n                                <Popover\r\n                                    key=\"ellipsis\"\r\n                                    content={\r\n                                        <Button.Group>\r\n                                            <Button>신고</Button>\r\n                                            <Button>수정</Button>\r\n                                            <Button danger>삭제</Button>\r\n                                        </Button.Group>\r\n                                    }\r\n                                />,\r\n                            ]}\r\n                            extra={<Button>팔로우</Button>}\r\n                        >\r\n                            <Card.Meta\r\n                                avatar={<Avatar>{c.User.nickname[0]}</Avatar>}\r\n                                title={c.User.nickname}\r\n                                description={c.content}\r\n                            ></Card.Meta>\r\n                        </Card>\r\n                    );\r\n                })}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}