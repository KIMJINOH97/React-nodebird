{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-nodebird\\\\ch1\\\\front\\\\components\\\\AppLayout.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport { Menu, Input, Button, Row, Col, Card, Avatar, Form } from 'antd';\nimport Proptypes from 'prop-types';\nimport LoginForm from './LoginForm';\nimport UserProfile from './UserProfile';\nimport { useSelector } from 'react-redux'; // const dummy = {\n//     // 이 데이터를 통해 front end 는 back end가 완성되지 않아도 코드를 확인 할 수 있다.\n//     nickname: '제로초',\n//     Post: [],\n//     Following: [],\n//     Followers: [],\n//     isLoggedIn: false,\n// };\n\nconst AppLayout = ({\n  children\n}) => {\n  const {\n    isLoggedIn\n  } = useSelector(state => state.user);\n  return (// link 안 a테그 넣어줘야함 , gutter는 Row간의 간격\n    __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, __jsx(Menu, {\n      mode: \"horizontal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, __jsx(Menu.Item, {\n      key: \"home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, __jsx(Link, {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }\n    }, \"Nodebird\"))), __jsx(Menu.Item, {\n      key: \"profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, __jsx(Link, {\n      href: \"/profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }\n    }, \"Profile\"))), __jsx(Menu.Item, {\n      key: \"mail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, __jsx(Input.Search, {\n      enterButton: true,\n      style: {\n        verticalAlign: 'middle'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }))), __jsx(Link, {\n      href: \"/signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, __jsx(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"))), __jsx(Row, {\n      gutter: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      xs: 24,\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, dummy.isLoggedIn ? //3항 연산자 로그인 하면 폼 보여주고 아니면 밑에꺼\n    __jsx(UserProfile, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }) : __jsx(LoginForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    })), __jsx(Col, {\n      xs: 24,\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, children), __jsx(Col, {\n      xs: 24,\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    })))\n  ); // xs: 모바일, sm 작은 화면, md 중간화면, lg 큰 화면 24gird 시스템임. 반응형 디자인 할 때!\n  // 어느정도 커지면 md 적용 더 커지면 lg ... 등\n};\n\nAppLayout.proptypes = {\n  children: Proptypes.node.isRequired\n};\nexport default AppLayout;","map":{"version":3,"sources":["C:/react-nodebird/ch1/front/components/AppLayout.js"],"names":["React","Link","Menu","Input","Button","Row","Col","Card","Avatar","Form","Proptypes","LoginForm","UserProfile","useSelector","AppLayout","children","isLoggedIn","state","user","verticalAlign","dummy","proptypes","node","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Link from 'next/link';\r\nimport { Menu, Input, Button, Row, Col, Card, Avatar, Form } from 'antd';\r\nimport Proptypes from 'prop-types';\r\nimport LoginForm from './LoginForm';\r\nimport UserProfile from './UserProfile';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// const dummy = {\r\n//     // 이 데이터를 통해 front end 는 back end가 완성되지 않아도 코드를 확인 할 수 있다.\r\n//     nickname: '제로초',\r\n//     Post: [],\r\n//     Following: [],\r\n//     Followers: [],\r\n//     isLoggedIn: false,\r\n// };\r\n\r\nconst AppLayout = ({ children }) => {\r\n    const { isLoggedIn } = useSelector((state) => state.user);\r\n    return (\r\n        // link 안 a테그 넣어줘야함 , gutter는 Row간의 간격\r\n        <div>\r\n            <Menu mode=\"horizontal\">\r\n                <Menu.Item key=\"home\">\r\n                    <Link href=\"/\">\r\n                        <a>Nodebird</a>\r\n                    </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"profile\">\r\n                    <Link href=\"/profile\">\r\n                        <a>Profile</a>\r\n                    </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"mail\">\r\n                    <Input.Search enterButton style={{ verticalAlign: 'middle' }} />\r\n                </Menu.Item>\r\n            </Menu>\r\n            <Link href=\"/signup\">\r\n                <a>\r\n                    <Button>회원가입</Button>\r\n                </a>\r\n            </Link>\r\n            <Row gutter={10}>\r\n                {/*얘네들 간의 간격 벌려줌*/}\r\n                <Col xs={24} md={6}>\r\n                    {dummy.isLoggedIn ? ( //3항 연산자 로그인 하면 폼 보여주고 아니면 밑에꺼\r\n                        <UserProfile />\r\n                    ) : (\r\n                        <LoginForm></LoginForm>\r\n                    )}\r\n                </Col>\r\n                <Col xs={24} md={12}>\r\n                    {children}\r\n                </Col>\r\n\r\n                <Col xs={24} md={6}></Col>\r\n            </Row>\r\n        </div>\r\n    ); // xs: 모바일, sm 작은 화면, md 중간화면, lg 큰 화면 24gird 시스템임. 반응형 디자인 할 때!\r\n    // 어느정도 커지면 md 적용 더 커지면 lg ... 등\r\n};\r\n\r\nAppLayout.proptypes = {\r\n    children: Proptypes.node.isRequired,\r\n};\r\nexport default AppLayout;\r\n"]},"metadata":{},"sourceType":"module"}