{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-nodebird\\\\ch1\\\\front\\\\components\\\\PostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_POST_REQUEST, ADD_POST_FAILURE } from '../reducers/post'; // const dummy = {\n//     isLoggedIn: true,\n//     imagePaths: [],\n//     mainPosts: [\n//         {\n//             User: {\n//                 id: 1,\n//                 nickname: '제로초',\n//             },\n//             content: '첫 번째 게시글',\n//             img: '',\n//         },\n//     ],\n// };\n\nconst PostForm = () => {\n  const {\n    imagePath,\n    isAddingPost\n  } = useSelector(state => state.post);\n  const dispatch = dispatch();\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const onChangeText = useCallback(e => {\n    setText(e.target.value);\n  }, []);\n  const onSubmit = useCallback(() => {\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        text\n      }\n    });\n  }, []);\n  return (// 이미지 업로드 해야하기 때문에 encType은 multipart임\n    // style넣을 때는 객체 형식으로 {{ 넣어야함 }}\n    __jsx(Form, {\n      encType: \"multipart/form-data\",\n      style: {\n        margin: '10px 0px 20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, __jsx(Input.TextArea, {\n      maxLength: 140,\n      placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC787\\uC5C8\\uB098\\uC694\",\n      value: text,\n      onChange: onChangeText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n      type: \"primary\",\n      style: {\n        float: 'right'\n      },\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, \"\\uC9F9\\uC9F9\\uCA31\")), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, mainPosts.map((v, i) => {\n      // 반복문\n      return __jsx(\"div\", {\n        key: v,\n        style: {\n          display: 'inline-block'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }\n      }, __jsx(\"img\", {\n        src: 'http://localhost:3000/' + v,\n        style: {\n          width: '200px'\n        },\n        alt: v,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }\n      }), __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }\n      }, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 33\n        }\n      }, \"\\uC81C\\uAC70\")));\n    })))\n  );\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/react-nodebird/ch1/front/components/PostForm.js"],"names":["React","useCallback","useState","Form","Input","Button","useSelector","useDispatch","ADD_POST_REQUEST","ADD_POST_FAILURE","PostForm","imagePath","isAddingPost","state","post","dispatch","text","setText","onChangeText","e","target","value","onSubmit","type","data","margin","float","mainPosts","map","v","i","display","width"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,QAAmD,kBAAnD,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA8BN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA/C;AACA,QAAMC,QAAQ,GAAGA,QAAQ,EAAzB;AACA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBf,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMgB,YAAY,GAAGjB,WAAW,CAAEkB,CAAD,IAAO;AACpCF,IAAAA,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH,GAF+B,EAE7B,EAF6B,CAAhC;AAIA,QAAMC,QAAQ,GAAGrB,WAAW,CAAC,MAAM;AAC/Bc,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAEf,gBADD;AAELgB,MAAAA,IAAI,EAAE;AACFR,QAAAA;AADE;AAFD,KAAD,CAAR;AAMH,GAP2B,EAOzB,EAPyB,CAA5B;AASA,SACI;AACA;AACA,UAAC,IAAD;AAAM,MAAA,OAAO,EAAC,qBAAd;AAAoC,MAAA,KAAK,EAAE;AAAES,QAAAA,MAAM,EAAE;AAAV,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,SAAS,EAAE,GAA3B;AAAgC,MAAA,WAAW,EAAC,uEAA5C;AAA6D,MAAA,KAAK,EAAET,IAApE;AAA0E,MAAA,QAAQ,EAAEE,YAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADJ,EAEI,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,KAAK,EAAE;AAAEQ,QAAAA,KAAK,EAAE;AAAT,OAA9B;AAAkD,MAAA,QAAQ,EAAC,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,CAFJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,SAAS,CAACC,GAAV,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACrB;AACA,aACI;AAAK,QAAA,GAAG,EAAED,CAAV;AAAa,QAAA,KAAK,EAAE;AAAEE,UAAAA,OAAO,EAAE;AAAX,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAE,2BAA2BF,CAArC;AAAwC,QAAA,KAAK,EAAE;AAAEG,UAAAA,KAAK,EAAE;AAAT,SAA/C;AAAmE,QAAA,GAAG,EAAEH,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,CAFJ,CADJ;AAQH,KAVA,CADL,CARJ;AAHJ;AA0BH,CA5CD;;AA6CA,eAAenB,QAAf","sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ADD_POST_REQUEST, ADD_POST_FAILURE } from '../reducers/post';\r\n\r\n// const dummy = {\r\n//     isLoggedIn: true,\r\n//     imagePaths: [],\r\n//     mainPosts: [\r\n//         {\r\n//             User: {\r\n//                 id: 1,\r\n//                 nickname: '제로초',\r\n//             },\r\n//             content: '첫 번째 게시글',\r\n//             img: '',\r\n//         },\r\n//     ],\r\n// };\r\n\r\nconst PostForm = () => {\r\n    const { imagePath, isAddingPost } = useSelector((state) => state.post);\r\n    const dispatch = dispatch();\r\n    const [text, setText] = useState('');\r\n\r\n    const onChangeText = useCallback((e) => {\r\n        setText(e.target.value);\r\n    }, []);\r\n\r\n    const onSubmit = useCallback(() => {\r\n        dispatch({\r\n            type: ADD_POST_REQUEST,\r\n            data: {\r\n                text,\r\n            },\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        // 이미지 업로드 해야하기 때문에 encType은 multipart임\r\n        // style넣을 때는 객체 형식으로 {{ 넣어야함 }}\r\n        <Form encType=\"multipart/form-data\" style={{ margin: '10px 0px 20px' }}>\r\n            <Input.TextArea maxLength={140} placeholder=\"어떤 신기한 일이 잇었나요\" value={text} onChange={onChangeText} />\r\n            <div>\r\n                <Button>이미지 업로드</Button>\r\n                <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\">\r\n                    짹짹쨱\r\n                </Button>\r\n            </div>\r\n            <div>\r\n                {mainPosts.map((v, i) => {\r\n                    // 반복문\r\n                    return (\r\n                        <div key={v} style={{ display: 'inline-block' }}>\r\n                            <img src={'http://localhost:3000/' + v} style={{ width: '200px' }} alt={v} />\r\n                            <div>\r\n                                <Button>제거</Button>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </Form>\r\n    );\r\n};\r\nexport default PostForm;\r\n"]},"metadata":{},"sourceType":"module"}