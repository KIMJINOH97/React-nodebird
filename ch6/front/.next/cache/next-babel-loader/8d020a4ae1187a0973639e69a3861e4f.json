{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar _require = require('../components/PostCard'),\n    PostCard = _require[\"default\"];\n\nexport { PostCard };\nvar initialState = {\n  mainPosts: [{\n    User: {\n      id: 1,\n      nickname: '제로초'\n    },\n    content: '첫 번째 게시글',\n    img: ''\n  }]\n};\nvar ADD_POST = 'ADD_POST';\nvar ADD_DUMMY = 'ADD_DUMMY';\nvar addPost = {\n  type: ADD_POST\n};\nvar adddummy = {\n  type: ADD_DUMMY,\n  data: {\n    content: 'Hello',\n    UserId: 1,\n    User: {\n      nickname: '제로초'\n    }\n  }\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_DUMMY:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          // 만약 지나치게 많이쓰면 해독 난해 함\n          mainPosts: [action.data].concat(_toConsumableArray(state.mainPosts))\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/react-nodebird/ch1/front/reducers/post.js"],"names":["require","PostCard","initialState","mainPosts","User","id","nickname","content","img","ADD_POST","ADD_DUMMY","addPost","type","adddummy","data","UserId","reducer","state","action"],"mappings":";;;;;;;eAAqCA,OAAO,CAAC,wBAAD,C;IAApBC,Q;;;AAExB,IAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,CACP;AACIC,IAAAA,IAAI,EAAE;AACFC,MAAAA,EAAE,EAAE,CADF;AAEFC,MAAAA,QAAQ,EAAE;AAFR,KADV;AAKIC,IAAAA,OAAO,EAAE,UALb;AAMIC,IAAAA,GAAG,EAAE;AANT,GADO;AADM,CAArB;AAaA,IAAMC,QAAQ,GAAG,UAAjB;AACA,IAAMC,SAAS,GAAG,WAAlB;AAEA,IAAMC,OAAO,GAAG;AACZC,EAAAA,IAAI,EAAEH;AADM,CAAhB;AAGA,IAAMI,QAAQ,GAAG;AACbD,EAAAA,IAAI,EAAEF,SADO;AAEbI,EAAAA,IAAI,EAAE;AACFP,IAAAA,OAAO,EAAE,OADP;AAEFQ,IAAAA,MAAM,EAAE,CAFN;AAGFX,IAAAA,IAAI,EAAE;AACFE,MAAAA,QAAQ,EAAE;AADR;AAHJ;AAFO,CAAjB;;AAWA,IAAMU,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBf,YAAyB;AAAA,MAAXgB,MAAW;;AAC9C,UAAQA,MAAM,CAACN,IAAf;AACI,SAAKH,QAAL;AAAe;AACX,iCACOQ,KADP;AAGH;;AACD,SAAKP,SAAL;AAAgB;AACZ,+CACOO,KADP;AACc;AACVd,UAAAA,SAAS,GAAGe,MAAM,CAACJ,IAAV,4BAAmBG,KAAK,CAACd,SAAzB;AAFb;AAIH;;AACD;AAAS;AACL,iCACOc,KADP;AAGH;AAhBL;AAkBH,CAnBD;;AAoBA,eAAeD,OAAf","sourcesContent":["export const { default: PostCard } = require('../components/PostCard');\r\n\r\nconst initialState = {\r\n    mainPosts: [\r\n        {\r\n            User: {\r\n                id: 1,\r\n                nickname: '제로초',\r\n            },\r\n            content: '첫 번째 게시글',\r\n            img: '',\r\n        },\r\n    ],\r\n};\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst ADD_DUMMY = 'ADD_DUMMY';\r\n\r\nconst addPost = {\r\n    type: ADD_POST,\r\n};\r\nconst adddummy = {\r\n    type: ADD_DUMMY,\r\n    data: {\r\n        content: 'Hello',\r\n        UserId: 1,\r\n        User: {\r\n            nickname: '제로초',\r\n        },\r\n    },\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case ADD_DUMMY: {\r\n            return {\r\n                ...state, // 만약 지나치게 많이쓰면 해독 난해 함\r\n                mainPosts: [action.data, ...state.mainPosts],\r\n            };\r\n        }\r\n        default: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n    }\r\n};\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}