{"ast":null,"code":"import { all, fork, call, takeLatest, put, delay } from 'redux-saga/effects';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from '../reducers/post';\n\nfunction addPostAPI() {}\n\nfunction addCommentAPI() {}\n\nfunction* addPost() {\n  try {\n    yield delay(2000);\n    yield put({\n      type: ADD_POST_SUCCESS\n    });\n  } catch (e) {\n    console.log('시발', e);\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* addComment(action) {\n  // ADD_POST_REQUEST 에서 받은 자료, data:{}\n  // request에대한 action\n  try {\n    yield delay(2000);\n    console.log('기다려기다려기다려', action.data.postId);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: {\n        postId: action.data.postId\n      }\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost); // 게시글 여러번 눌러도 작성 한번!.\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["C:/react-nodebird/ch1/front/saga/post.js"],"names":["all","fork","call","takeLatest","put","delay","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPostAPI","addCommentAPI","addPost","type","e","console","log","error","addComment","action","data","postId","watchAddPost","watchAddComment","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,UAA1B,EAAsCC,GAAtC,EAA2CC,KAA3C,QAAwD,oBAAxD;AACA,SACIC,gBADJ,EAEIC,gBAFJ,EAGIC,gBAHJ,EAIIC,mBAJJ,EAKIC,mBALJ,EAMIC,mBANJ,QAOO,kBAPP;;AASA,SAASC,UAAT,GAAsB,CAAE;;AAExB,SAASC,aAAT,GAAyB,CAAE;;AAE3B,UAAUC,OAAV,GAAoB;AAChB,MAAI;AACA,UAAMT,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACNW,MAAAA,IAAI,EAAER;AADA,KAAD,CAAT;AAGH,GALD,CAKE,OAAOS,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBF,CAAlB;AACA,UAAMZ,GAAG,CAAC;AACNW,MAAAA,IAAI,EAAEP,gBADA;AAENW,MAAAA,KAAK,EAAEH;AAFD,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUI,UAAV,CAAqBC,MAArB,EAA6B;AACzB;AACA;AACA,MAAI;AACA,UAAMhB,KAAK,CAAC,IAAD,CAAX;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBG,MAAM,CAACC,IAAP,CAAYC,MAArC;AACA,UAAMnB,GAAG,CAAC;AACNW,MAAAA,IAAI,EAAEL,mBADA;AAENY,MAAAA,IAAI,EAAE;AACFC,QAAAA,MAAM,EAAEF,MAAM,CAACC,IAAP,CAAYC;AADlB;AAFA,KAAD,CAAT;AAMH,GATD,CASE,OAAOP,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACE,KAAR,CAAcH,CAAd;AACA,UAAMZ,GAAG,CAAC;AACNW,MAAAA,IAAI,EAAEJ,mBADA;AAENQ,MAAAA,KAAK,EAAEH;AAFD,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUQ,YAAV,GAAyB;AACrB,QAAMrB,UAAU,CAACG,gBAAD,EAAmBQ,OAAnB,CAAhB,CADqB,CACwB;AAChD;;AAED,UAAUW,eAAV,GAA4B;AACxB,QAAMtB,UAAU,CAACM,mBAAD,EAAsBW,UAAtB,CAAhB;AACH;;AAED,eAAe,UAAUM,QAAV,GAAqB;AAChC,QAAM1B,GAAG,CAAC,CAACC,IAAI,CAACuB,YAAD,CAAL,EAAqBvB,IAAI,CAACwB,eAAD,CAAzB,CAAD,CAAT;AACH","sourcesContent":["import { all, fork, call, takeLatest, put, delay } from 'redux-saga/effects';\r\nimport {\r\n    ADD_POST_REQUEST,\r\n    ADD_POST_SUCCESS,\r\n    ADD_POST_FAILURE,\r\n    ADD_COMMENT_REQUEST,\r\n    ADD_COMMENT_SUCCESS,\r\n    ADD_COMMENT_FAILURE,\r\n} from '../reducers/post';\r\n\r\nfunction addPostAPI() {}\r\n\r\nfunction addCommentAPI() {}\r\n\r\nfunction* addPost() {\r\n    try {\r\n        yield delay(2000);\r\n        yield put({\r\n            type: ADD_POST_SUCCESS,\r\n        });\r\n    } catch (e) {\r\n        console.log('시발', e);\r\n        yield put({\r\n            type: ADD_POST_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* addComment(action) {\r\n    // ADD_POST_REQUEST 에서 받은 자료, data:{}\r\n    // request에대한 action\r\n    try {\r\n        yield delay(2000);\r\n        console.log('기다려기다려기다려', action.data.postId);\r\n        yield put({\r\n            type: ADD_COMMENT_SUCCESS,\r\n            data: {\r\n                postId: action.data.postId,\r\n            },\r\n        });\r\n    } catch (e) {\r\n        console.error(e);\r\n        yield put({\r\n            type: ADD_COMMENT_FAILURE,\r\n            error: e,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n    yield takeLatest(ADD_POST_REQUEST, addPost); // 게시글 여러번 눌러도 작성 한번!.\r\n}\r\n\r\nfunction* watchAddComment() {\r\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nexport default function* postSaga() {\r\n    yield all([fork(watchAddPost), fork(watchAddComment)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}