{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { LOAD_HASHTAG_POSTS_REQUEST, LOAD_MAIN_POSTS_FAILURE } from '../reducers/post';\nimport PostCard from '../components/PostCard';\n\nvar Hashtag = function Hashtag(_ref) {\n  _s();\n\n  var tag = _ref.tag;\n  console.log(tag);\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      mainPosts = _useSelector.mainPosts;\n\n  useEffect(function () {\n    dispatch({\n      type: LOAD_HASHTAG_POSTS_REQUEST,\n      data: tag\n    });\n  }, []);\n  return __jsx(\"div\", null, mainPosts.map(function (c) {\n    __jsx(PostCard, {\n      key: +c.createdAt,\n      post: c\n    });\n  }));\n};\n\n_s(Hashtag, \"TFMHDrjmtYOf8qInyyTWmKcACrU=\", true, function () {\n  return [useDispatch];\n});\n\n_c = Hashtag;\nHashtag.propTypes = {\n  tag: PropTypes.string.isRequired\n};\n\nHashtag.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // 서버에서도 프론트에서도 실행됨 젤 먼저 실행됨.\n            console.log('hashtag getInitialProps', context.query.tag);\n            return _context.abrupt(\"return\", {\n              tag: context.query.tag\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Hashtag;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hashtag\");","map":{"version":3,"sources":["C:/react-nodebird/nodebird/front/pages/hashtag.js"],"names":["React","useEffect","PropTypes","useDispatch","LOAD_HASHTAG_POSTS_REQUEST","LOAD_MAIN_POSTS_FAILURE","PostCard","Hashtag","tag","console","log","dispatch","useSelector","state","user","mainPosts","type","data","map","c","createdAt","propTypes","string","isRequired","getInitialProps","context","query"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,0BAAT,EAAqCC,uBAArC,QAAoE,kBAApE;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAa;AAAA;;AAAA,MAAVC,GAAU,QAAVA,GAAU;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,MAAMG,QAAQ,GAAGR,WAAW,EAA5B;;AAFyB,qBAGHS,WAAW,CAAC,UAACC,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAHR;AAAA,MAGjBC,SAHiB,gBAGjBA,SAHiB;;AAKzBd,EAAAA,SAAS,CAAC,YAAM;AACZU,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEZ,0BADD;AAELa,MAAAA,IAAI,EAAET;AAFD,KAAD,CAAR;AAIH,GALQ,EAKN,EALM,CAAT;AAMA,SACI,mBACKO,SAAS,CAACG,GAAV,CAAc,UAACC,CAAD,EAAO;AAClB,UAAC,QAAD;AAAU,MAAA,GAAG,EAAE,CAACA,CAAC,CAACC,SAAlB;AAA6B,MAAA,IAAI,EAAED;AAAnC;AACH,GAFA,CADL,CADJ;AAOH,CAlBD;;GAAMZ,O;UAEeJ,W;;;KAFfI,O;AAoBNA,OAAO,CAACc,SAAR,GAAoB;AAChBb,EAAAA,GAAG,EAAEN,SAAS,CAACoB,MAAV,CAAiBC;AADN,CAApB;;AAIAhB,OAAO,CAACiB,eAAR;AAAA,uEAA0B,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AACtB;AACAhB,YAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCe,OAAO,CAACC,KAAR,CAAclB,GAArD;AAFsB,6CAGf;AAAEA,cAAAA,GAAG,EAAEiB,OAAO,CAACC,KAAR,CAAclB;AAArB,aAHe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAeD,OAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport { LOAD_HASHTAG_POSTS_REQUEST, LOAD_MAIN_POSTS_FAILURE } from '../reducers/post';\r\nimport PostCard from '../components/PostCard';\r\n\r\nconst Hashtag = ({ tag }) => {\r\n    console.log(tag);\r\n    const dispatch = useDispatch();\r\n    const { mainPosts } = useSelector((state) => state.user);\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: LOAD_HASHTAG_POSTS_REQUEST,\r\n            data: tag,\r\n        });\r\n    }, []);\r\n    return (\r\n        <div>\r\n            {mainPosts.map((c) => {\r\n                <PostCard key={+c.createdAt} post={c}></PostCard>;\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nHashtag.propTypes = {\r\n    tag: PropTypes.string.isRequired,\r\n};\r\n\r\nHashtag.getInitialProps = async (context) => {\r\n    // 서버에서도 프론트에서도 실행됨 젤 먼저 실행됨.\r\n    console.log('hashtag getInitialProps', context.query.tag);\r\n    return { tag: context.query.tag };\r\n};\r\n\r\nexport default Hashtag;\r\n"]},"metadata":{},"sourceType":"module"}