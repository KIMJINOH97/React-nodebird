{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-nodebird\\\\ch1\\\\front\\\\components\\\\PostCard.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { Button, Card, Avatar, Popover, Input, Form, List, Comment } from 'antd';\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nconst PostCard = ({\n  post\n}) => {\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const {\n    0: commentText,\n    1: setCommentText\n  } = useState('');\n  const {\n    me,\n    isAddingComment\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  });\n  const onSubmitComment = useCallback(e => {\n    e.preventDefault;\n    dispatch({\n      type: ADD_COMMENT_REQUEST\n    });\n  }, []);\n  const onChangeCommentText = useCallback(e => {\n    e.preventDefault;\n    setCommentText(e.target.value);\n  }, []);\n  return __jsx(Card, {\n    key: +post.createdAt,\n    cover: post.img && __jsx(\"img\", {\n      alt: \"example\",\n      src: post.img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 32\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }), __jsx(HeartTwoTone, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }), __jsx(MessageOutlined, {\n      onClick: onToggleComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }), __jsx(Popover, {\n      key: \"ellipsis\",\n      content: __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }\n      }, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }\n      }, \"\\uC2E0\\uACE0\"), __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        danger: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }\n      }, \"\\uC0AD\\uC81C\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }))],\n    extra: __jsx(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 20\n      }\n    }, \"\\uD314\\uB85C\\uC6B0\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 32\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), commentFormOpened && __jsx(React.Fragment, null, __jsx(Form, {\n    onSubmit: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, __jsx(Input.TextArea, {\n    rows: 4,\n    value: commentText,\n    onChange: onChangeCommentText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  })), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: isAddingComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, \"\\uC090\\uC57D\")), __jsx(List, {\n    header: `${post.Comments ? post.Comments.length : 0} 댓글`,\n    itemLayout: \"horizontal\",\n    dataSource: post.Comment || [],\n    renderItem: item => __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }, __jsx(Comment, {\n      author: item.User.nickname,\n      avatar: __jsx(Avatar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 45\n        }\n      }, item.User.nickname),\n      content: item.content,\n      datetime: item.createdAt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 33\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  })));\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    User: PropTypes.object,\n    content: PropTypes.string,\n    img: PropTypes.string,\n    createdAt: PropTypes.object\n  })\n};\nexport default PostCard;","map":{"version":3,"sources":["C:/react-nodebird/ch1/front/components/PostCard.js"],"names":["React","useState","useCallback","Button","Card","Avatar","Popover","Input","Form","List","Comment","RetweetOutlined","HeartTwoTone","HeartOutlined","MessageOutlined","EllipsisOutlined","PropTypes","useSelector","useDispatch","ADD_COMMENT_REQUEST","PostCard","post","commentFormOpened","setCommentFormOpened","commentText","setCommentText","me","isAddingComment","state","dispatch","onToggleComment","prev","onSubmitComment","e","preventDefault","type","onChangeCommentText","target","value","createdAt","img","User","nickname","content","Comments","length","item","propTypes","shape","object","string"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { Button, Card, Avatar, Popover, Input, Form, List, Comment } from 'antd';\r\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\r\n\r\nconst PostCard = ({ post }) => {\r\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n    const [commentText, setCommentText] = useState('');\r\n    const { me, isAddingComment } = useSelector((state) => state.post);\r\n    const dispatch = useDispatch();\r\n\r\n    const onToggleComment = useCallback(() => {\r\n        setCommentFormOpened((prev) => !prev);\r\n    });\r\n\r\n    const onSubmitComment = useCallback((e) => {\r\n        e.preventDefault;\r\n        dispatch({\r\n            type: ADD_COMMENT_REQUEST,\r\n        });\r\n    }, []);\r\n\r\n    const onChangeCommentText = useCallback((e) => {\r\n        e.preventDefault;\r\n        setCommentText(e.target.value);\r\n    }, []);\r\n\r\n    return (\r\n        <Card\r\n            key={+post.createdAt}\r\n            cover={post.img && <img alt=\"example\" src={post.img} />}\r\n            actions={[\r\n                <RetweetOutlined />,\r\n                <HeartTwoTone />,\r\n                <MessageOutlined onClick={onToggleComment} />,\r\n                <Popover\r\n                    key=\"ellipsis\"\r\n                    content={\r\n                        <Button.Group>\r\n                            <Button>신고</Button>\r\n                            <Button>수정</Button>\r\n                            <Button danger>삭제</Button>\r\n                        </Button.Group>\r\n                    }\r\n                >\r\n                    <EllipsisOutlined />\r\n                </Popover>,\r\n            ]}\r\n            extra={<Button>팔로우</Button>}\r\n        >\r\n            <Card.Meta avatar={<Avatar>{post.User.nickname[0]}</Avatar>} title={post.User.nickname} description={post.content}></Card.Meta>\r\n            {commentFormOpened && (\r\n                <>\r\n                    <Form onSubmit={onSubmitComment}>\r\n                        <Form.Item>\r\n                            <Input.TextArea rows={4} value={commentText} onChange={onChangeCommentText} />\r\n                        </Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" loading={isAddingComment}>\r\n                            삐약\r\n                        </Button>\r\n                    </Form>\r\n                    <List\r\n                        header={`${post.Comments ? post.Comments.length : 0} 댓글`}\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={post.Comment || []}\r\n                        renderItem={(item) => (\r\n                            <li>\r\n                                <Comment\r\n                                    author={item.User.nickname}\r\n                                    avatar={<Avatar>{item.User.nickname}</Avatar>}\r\n                                    content={item.content}\r\n                                    datetime={item.createdAt}\r\n                                />\r\n                            </li>\r\n                        )}\r\n                    />\r\n                </>\r\n            )}\r\n        </Card>\r\n    );\r\n};\r\n\r\nPostCard.propTypes = {\r\n    post: PropTypes.shape({\r\n        User: PropTypes.object,\r\n        content: PropTypes.string,\r\n        img: PropTypes.string,\r\n        createdAt: PropTypes.object,\r\n    }),\r\n};\r\nexport default PostCard;\r\n"]},"metadata":{},"sourceType":"module"}