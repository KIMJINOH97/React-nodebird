{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-nodebird\\\\nodebird\\\\front\\\\components\\\\LoginForm.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport Link from 'next/link';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useInput } from '../pages/signup';\nimport { LOG_IN_REQUEST } from '../reducers/user';\n\nconst LoginForm = () => {\n  const [id, onChangeId] = useInput(''); // signup의 커스텀 훅 재사용\n\n  const [password, onChangePassword] = useInput('');\n  const dispatch = useDispatch(); // 데이터 확인용\n\n  const {\n    me\n  } = useSelector(state => state.user); // 로딩 중인지?\n\n  const onSubmitForm = useCallback(e => {\n    // 자식 컴포넌트로 넣어주는 것은 무조건 useCallback으로 감싸준다.\n    e.preventDefault;\n    dispatch({\n      type: LOG_IN_REQUEST,\n      data: {\n        userId: id,\n        password\n      }\n    });\n    console.log({\n      id,\n      password\n    });\n  });\n  return __jsx(Form, {\n    style: {\n      padding: 10\n    },\n    onFinish: onSubmitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    required: true,\n    onChange: onChangeId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"\\uD328\\uC2A4\\uC6CC\\uB4DC\"), __jsx(Input, {\n    name: \"user-password\",\n    value: password,\n    required: true,\n    onChange: onChangePassword,\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    style: {\n      marginTop: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"\\uB85C\\uADF8\\uC778\"), __jsx(Link, {\n    href: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["C:/react-nodebird/nodebird/front/components/LoginForm.js"],"names":["React","useState","useCallback","Form","Input","Button","Link","useDispatch","useSelector","useInput","LOG_IN_REQUEST","LoginForm","id","onChangeId","password","onChangePassword","dispatch","me","state","user","onSubmitForm","e","preventDefault","type","data","userId","console","log","padding","marginTop"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,cAAT,QAA+B,kBAA/B;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACpB,QAAM,CAACC,EAAD,EAAKC,UAAL,IAAmBJ,QAAQ,CAAC,EAAD,CAAjC,CADoB,CACmB;;AACvC,QAAM,CAACK,QAAD,EAAWC,gBAAX,IAA+BN,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAMO,QAAQ,GAAGT,WAAW,EAA5B,CAHoB,CAGY;;AAChC,QAAM;AAAEU,IAAAA;AAAF,MAAST,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B,CAJoB,CAI+B;;AAEnD,QAAMC,YAAY,GAAGlB,WAAW,CAAEmB,CAAD,IAAO;AACpC;AACAA,IAAAA,CAAC,CAACC,cAAF;AACAN,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAEb,cADD;AAELc,MAAAA,IAAI,EAAE;AACFC,QAAAA,MAAM,EAAEb,EADN;AAEFE,QAAAA;AAFE;AAFD,KAAD,CAAR;AAOAY,IAAAA,OAAO,CAACC,GAAR,CAAY;AACRf,MAAAA,EADQ;AAERE,MAAAA;AAFQ,KAAZ;AAIH,GAd+B,CAAhC;AAgBA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEc,MAAAA,OAAO,EAAE;AAAX,KAAb;AAA8B,IAAA,QAAQ,EAAER,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,KAAK,EAAER,EAA7B;AAAiC,IAAA,QAAQ,MAAzC;AAA0C,IAAA,QAAQ,EAAEC,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEI,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,eAAZ;AAA4B,IAAA,KAAK,EAAEC,QAAnC;AAA6C,IAAA,QAAQ,MAArD;AAAsD,IAAA,QAAQ,EAAEC,gBAAhE;AAAkF,IAAA,IAAI,EAAC,UAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CALJ,EASI;AAAK,IAAA,KAAK,EAAE;AAAEc,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAII,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,CADJ,CAJJ,CATJ,CADJ;AAsBH,CA5CD;;AA8CA,eAAelB,SAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport Link from 'next/link';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useInput } from '../pages/signup';\r\nimport { LOG_IN_REQUEST } from '../reducers/user';\r\n\r\nconst LoginForm = () => {\r\n    const [id, onChangeId] = useInput(''); // signup의 커스텀 훅 재사용\r\n    const [password, onChangePassword] = useInput('');\r\n    const dispatch = useDispatch(); // 데이터 확인용\r\n    const { me } = useSelector((state) => state.user); // 로딩 중인지?\r\n\r\n    const onSubmitForm = useCallback((e) => {\r\n        // 자식 컴포넌트로 넣어주는 것은 무조건 useCallback으로 감싸준다.\r\n        e.preventDefault;\r\n        dispatch({\r\n            type: LOG_IN_REQUEST,\r\n            data: {\r\n                userId: id,\r\n                password,\r\n            },\r\n        });\r\n        console.log({\r\n            id,\r\n            password,\r\n        });\r\n    });\r\n\r\n    return (\r\n        <Form style={{ padding: 10 }} onFinish={onSubmitForm}>\r\n            <div>\r\n                <label htmlFor=\"user-id\">아이디</label>\r\n                <Input name=\"user-id\" value={id} required onChange={onChangeId}></Input>\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"user-password\">패스워드</label>\r\n                <Input name=\"user-password\" value={password} required onChange={onChangePassword} type=\"password\"></Input>\r\n            </div>\r\n            <div style={{ marginTop: '10px' }}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    로그인\r\n                </Button>\r\n                <Link href=\"/signup\">\r\n                    <a>\r\n                        <Button>회원가입</Button>\r\n                    </a>\r\n                </Link>\r\n            </div>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}