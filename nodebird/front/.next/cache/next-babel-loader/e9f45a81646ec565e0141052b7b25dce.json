{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-nodebird\\\\ch1\\\\front\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react'; // next에선 원래 안써도 됨\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostCard from '../components/PostCard';\nimport PostForm from '../components/PostForm';\nimport { LOG_IN, LOG_OUT, loginAction, logoutAction } from '../reducers/user'; // const dummy = { 리덕스 state가 가지고 있으므로 필요 없음.\n//     isLoggedIn: true,\n//     imagePaths: [],\n//     mainPosts: [\n//         {\n//             User: {\n//                 id: 1,\n//                 nickname: '제로초',\n//             },\n//             content: '첫 번째 게시글',\n//             img: '',\n//         },\n//     ],\n// };\n\nconst Home = () => {\n  // hooks\n  const dispatch = useDispatch(); // useState가 useSelector로 바뀌었다 생각하면 되고, setState가 dispatch라 보면 됨.\n\n  const {\n    isLoggedIn,\n    user\n  } = useSelector(state => state.user); // 첫 state는 전체 state 안에는 user와 isloggedin이 들어있음\n\n  const {\n    mainPosts\n  } = useSelector(state => state.post);\n  console.log(isLoggedIn, user);\n  useEffect(() => {\n    //로그인 로그아웃 그냥 테스트용\n    dispatch({\n      type: 'HELLO SAGA'\n    }); // 3번 dispatch하면 3번 될꺼라 생각하지만, helloSaga가 이미 중단 되었기 때문에\n    // 안됨.\n  }, []); //     dispatch({\n  //         type: LOG_OUT,\n  //     });\n  //     dispatch(loginAction);\n  //     // dispatch(logoutAction);\n  // }, []);\n\n  return (// user도 훅스로 가져올 수 있음\n    __jsx(React.Fragment, null, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, user ? __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }, \"\\uB85C\\uADF8\\uC778 \\uD588\\uC2B5\\uB2C8\\uB2E4 : \", user.nickname) : __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 65\n      }\n    }, \"\\uB85C\\uADF8\\uC544\\uC6C3 \\uD588\\uC2B5\\uB2C8\\uB2E4.\"), isLoggedIn && __jsx(PostForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 32\n      }\n    }), mainPosts.map(c => {\n      return __jsx(PostCard, {\n        key: c,\n        post: c,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 28\n        }\n      });\n    })))\n  );\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/react-nodebird/ch1/front/pages/index.js"],"names":["React","useEffect","useState","useDispatch","useSelector","PostCard","PostForm","LOG_IN","LOG_OUT","loginAction","logoutAction","Home","dispatch","isLoggedIn","user","state","mainPosts","post","console","log","type","nickname","map","c"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CAAoD;;AACpD,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,WAA1B,EAAuCC,YAAvC,QAA2D,kBAA3D,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACf;AACA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B,CAFe,CAIf;;AACA,QAAM;AAAEU,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAuBV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxC,CALe,CAKkD;;AACjE,QAAM;AAAEE,IAAAA;AAAF,MAAgBZ,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACE,IAAlB,CAAjC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,UAAZ,EAAwBC,IAAxB;AACAb,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAW,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAE;AADD,KAAD,CAAR,CAFY,CAKZ;AACA;AACH,GAPQ,EAON,EAPM,CAAT,CARe,CAiBf;AACA;AACA;AACA;AACA;AACA;;AAEA,SACI;AACA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKN,IAAI,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAAiBA,IAAI,CAACO,QAAtB,CAAH,GAA2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DADpD,EAEKR,UAAU,IAAI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFnB,EAGKG,SAAS,CAACM,GAAV,CAAeC,CAAD,IAAO;AAClB,aAAO,MAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,CAAf;AAAkB,QAAA,IAAI,EAAEA,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFA,CAHL,CADJ;AAFJ;AAYH,CApCD;;AAsCA,eAAeZ,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react'; // next에선 원래 안써도 됨\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PostCard from '../components/PostCard';\r\nimport PostForm from '../components/PostForm';\r\nimport { LOG_IN, LOG_OUT, loginAction, logoutAction } from '../reducers/user';\r\n\r\n// const dummy = { 리덕스 state가 가지고 있으므로 필요 없음.\r\n//     isLoggedIn: true,\r\n//     imagePaths: [],\r\n//     mainPosts: [\r\n//         {\r\n//             User: {\r\n//                 id: 1,\r\n//                 nickname: '제로초',\r\n//             },\r\n//             content: '첫 번째 게시글',\r\n//             img: '',\r\n//         },\r\n//     ],\r\n// };\r\n\r\nconst Home = () => {\r\n    // hooks\r\n    const dispatch = useDispatch();\r\n\r\n    // useState가 useSelector로 바뀌었다 생각하면 되고, setState가 dispatch라 보면 됨.\r\n    const { isLoggedIn, user } = useSelector((state) => state.user); // 첫 state는 전체 state 안에는 user와 isloggedin이 들어있음\r\n    const { mainPosts } = useSelector((state) => state.post);\r\n    console.log(isLoggedIn, user);\r\n    useEffect(() => {\r\n        //로그인 로그아웃 그냥 테스트용\r\n        dispatch({\r\n            type: 'HELLO SAGA',\r\n        });\r\n        // 3번 dispatch하면 3번 될꺼라 생각하지만, helloSaga가 이미 중단 되었기 때문에\r\n        // 안됨.\r\n    }, []);\r\n\r\n    //     dispatch({\r\n    //         type: LOG_OUT,\r\n    //     });\r\n    //     dispatch(loginAction);\r\n    //     // dispatch(logoutAction);\r\n    // }, []);\r\n\r\n    return (\r\n        // user도 훅스로 가져올 수 있음\r\n        <>\r\n            <div>\r\n                {user ? <div>로그인 했습니다 : {user.nickname}</div> : <div>로그아웃 했습니다.</div>}\r\n                {isLoggedIn && <PostForm />}\r\n                {mainPosts.map((c) => {\r\n                    return <PostCard key={c} post={c} />;\r\n                })}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}